[33mcommit 58a9b49c8592b2ae51db7aeaedf0876e1f829f9c[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: kris <kristonwang02@gmail.com>
Date:   Sat Dec 28 16:22:17 2024 -0500

    Remove submodule

[33mcommit 22ecb2cec82db1ee2a3ca0bdfb5e3b8caa5fa1a4[m
Author: kris <kristonwang02@gmail.com>
Date:   Sat Dec 28 16:00:00 2024 -0500

    Add asst2 code

[33mcommit e07f36502cac839ce21a9683f735710e3aed8073[m
Author: kris <kristonwang02@gmail.com>
Date:   Fri Dec 27 16:04:38 2024 -0500

    Found that the non-speedup is due to memory bandwidth--loads 4x32 bits every time for one computation. Computation-memory ration is too low. Achieving a greater speedup of 15.09 from ISPC  by adding unecessary computation that increases computation-memory ration. Finished lab1

[33mcommit 1a6304b8cf20c9af0a5186445133e4f55bf9f2e7[m
Author: kris <kristonwang02@gmail.com>
Date:   Thu Dec 26 18:15:22 2024 -0500

    Customize a AVX2 version of sqrt, achieving a speedup of 8.12x > 6.77x from ISPC

[33mcommit e4d0c66e458e263c59af79ab72032be6c0f505bf[m
Author: kris <kristonwang02@gmail.com>
Date:   Thu Dec 26 14:27:50 2024 -0500

    Achieves a min speedup of 0.93x from ISPC by making 7 out of 8 in a vector unit handle heavy tasks while the rest 1 handles the lightest

[33mcommit 255aaff11d336cf3ec8e7b0a03734c8b8d107f9d[m
Author: kris <kristonwang02@gmail.com>
Date:   Thu Dec 26 13:00:21 2024 -0500

    achieving a speedup of 6.35x from ISPC by using a fixed value of 2.6f with enough iterations

[33mcommit fc2c6dfb6e0a8210683f3278df9ffb9d84b5a412[m
Author: kris <kristonwang02@gmail.com>
Date:   Wed Dec 25 15:21:08 2024 -0500

    Change task number to 16 to allow 16 parallel tasks assigned by ISPC, achieveing a 38x speedup from task ISPC, and 5.6x speedup from ISPC

[33mcommit 30d6232822f7fd0eda5f8ad049a1e37a810df791[m
Author: kris <kristonwang02@gmail.com>
Date:   Tue Dec 24 17:25:17 2024 -0500

    Finished the bonus of part 2 by interleaving

[33mcommit 90af6954b4632ab002b5209496b98233405035ca[m
Author: kris <kristonwang02@gmail.com>
Date:   Tue Dec 24 16:57:58 2024 -0500

    Finish calmpedExpVector() implementation--using init(N - i) to handle the remainder part

[33mcommit d1e4c2406265fd02db8f982d75ee2c8607119ad4[m
Author: kris <kristonwang02@gmail.com>
Date:   Mon Dec 23 15:07:03 2024 -0500

    Find the problem in the abs function and understood the vector manipulation

[33mcommit 2abf79b51611a608262518ccf919c2948915e995[m
Author: kris <kristonwang02@gmail.com>
Date:   Sun Dec 22 14:54:05 2024 -0500

    Acheved a speedup of 7.2 with 8 threads using interleaved drawing

[33mcommit 2c1aea197871258f208b3dbe942939a75c379d5e[m
Author: kris <kristonwang02@gmail.com>
Date:   Sun Dec 22 13:08:01 2024 -0500

    Done with measuring running time of each thread out of 8

[33mcommit 966536b69c6be54bb89456d6079432c28eb1d500[m
Author: kris <kristonwang02@gmail.com>
Date:   Sun Dec 22 12:50:22 2024 -0500

    Done with 8 threads calling with a speedup of 3.87--non linear

[33mcommit 04333c91e424f75edecaa49bbe0c6566e113644f[m
Author: kris <kristonwang02@gmail.com>
Date:   Sat Dec 21 14:18:32 2024 -0500

    Finished the 2thread drawing by spliting the image into two equal parts, speeding up 1.90 times with non zoomed-in image and 1.64 times with zoomed-in image drawing

[33mcommit ddc73ba2a84adfc1c13a5a5c38c08337d620933d[m
Author: Lyu(Kriston) Wang <108577541+Kriston-12@users.noreply.github.com>
Date:   Fri Dec 13 22:34:36 2024 -0500

    Update README.md

[33mcommit a1a57cd0e54b69a87a67d2832b69e446e44ddeaa[m
Author: Lyu(Kriston) Wang <108577541+Kriston-12@users.noreply.github.com>
Date:   Fri Dec 13 22:25:04 2024 -0500

    Create README.md

[33mcommit d48e3f89f9f1b37112c4678de913fb0ad8608aa7[m
Author: kriston <lyu.wang@mail.utoronto.ca>
Date:   Fri Dec 13 22:23:19 2024 -0500

    first commit
